# Generated by Django 3.1.3 on 2020-11-25 14:26

import codenames.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Arena',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
            ],
        ),
        migrations.CreateModel(
            name='Cup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=5)),
                ('date', models.DateField(null=True)),
                ('place', models.CharField(max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(choices=[('A', 'A'), ('B', 'B')], default=('A', 'A'), max_length=1)),
                ('cup_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groupcup_id', to='codenames.cup')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='ResultType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbr', models.CharField(max_length=2)),
                ('_description', models.CharField(max_length=30)),
                ('is_auto', models.BooleanField(default=False)),
                ('is_home_win', models.BooleanField(default=True)),
                ('_auto_score', models.IntegerField(blank=True, choices=[(-9, '0:9'), (-8, '0:8'), (-7, '0:7'), (-6, '0:6'), (-5, '0:5'), (-4, '0:4'), (-3, '0:3'), (-2, '0:2'), (-1, '0:1'), (0, '0:0'), (1, '1:0'), (2, '2:0'), (3, '3:0'), (4, '4:0'), (5, '5:0'), (6, '6:0'), (7, '7:0'), (8, '8:0')], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_paid', models.BooleanField(default=False)),
                ('has_come', models.BooleanField(blank=True, default=False, null=True)),
                ('seed', models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9)], null=True)),
                ('fee_size', models.IntegerField(choices=[(700, 700), (900, 900)], default=700)),
                ('first_player_id', models.ForeignKey(default=codenames.models.get_empty_player_id, on_delete=django.db.models.deletion.CASCADE, related_name='first_player_id', to='codenames.player')),
                ('group_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teamgroup_id', to='codenames.group')),
                ('second_player_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='second_player_id', to='codenames.player')),
            ],
        ),
        migrations.CreateModel(
            name='GameResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9)])),
                ('score', models.IntegerField(choices=[(-9, '0:9'), (-8, '0:8'), (-7, '0:7'), (-6, '0:6'), (-5, '0:5'), (-4, '0:4'), (-3, '0:3'), (-2, '0:2'), (-1, '0:1'), (0, '0:0'), (1, '1:0'), (2, '2:0'), (3, '3:0'), (4, '4:0'), (5, '5:0'), (6, '6:0'), (7, '7:0'), (8, '8:0')], default=0)),
                ('arena_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arena_id', to='codenames.arena')),
                ('away_team_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_team_id', to='codenames.team')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gameresultgroup_id', to='codenames.group')),
                ('home_team_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_team_id', to='codenames.team')),
                ('result_type_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='result_type_id', to='codenames.resulttype')),
            ],
        ),
        migrations.AddField(
            model_name='arena',
            name='group_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arenagroup_id', to='codenames.group'),
        ),
    ]
